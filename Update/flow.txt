
void main()
{
	SetValidityOfSaving( FALSE );
	CallSection("BrandLogo");
	JumpSection("Title");
}

void BrandLogo()
{
	DrawScene("black", 0);

	if(GetGlobalFlag(GFlag_FirstPlay) == 0)
	{
		LanguagePrompt();
		Wait(500);
	}

	SetGlobalFlag(GFlag_FirstPlay, 1);

	DrawBG( "title/07thlogo", 1000, TRUE );
	Wait( 2000 );
	DrawSceneWithMask( "title/mangagamer", "effect/logomask", 0, 0, 1000 );

	Wait( 2000 );

	DrawSceneWithMask( "black", "effect/logomask", 0, 0, 1000 );
}

void Title()
{
	SetValidityOfSaving( FALSE );

	//DrawScene("black", 1000);

	DrawScene("white", 1000);

	Wait(100);

	//DrawSprite( 10, "Logo", NULL, 0, 0, 0, 0, 0, 0, 0, TRUE, TRUE, 0, 0, 10, 1500, FALSE );

	DrawSprite( 10, "title/logo", NULL, 0, 0, 0, 0, 0, 0, FALSE, FALSE, 0, 0, 10, 0, FALSE );

	DrawSceneWithMask("black", "effect/maskc", 0, 0, 700);

	Wait(500);

	PlayBGM( 2, "higurashi", 128, 0 );

	Wait(1000);

	DrawScene("white", 1000);

	DrawSceneWithMask("title/title", "effect/right", 0, 0, 1000);

	Wait(1000);

	DrawSprite( 10, "title/rogo_sp", NULL, 0, 0, 0, 0, 0, 0, FALSE, FALSE, 0, 0, 10, 1500, TRUE );

	Wait(1000);

	LoadTitleScreen();

	Wait(2000);

	DrawSpriteWithFiltering( 09, "title/title_kage", "effect/left", 0, 0, 0, TRUE, TRUE, 0, 0, 09, 1500, TRUE );

	StoreValueToLocalWork( LOCALWORK_NO_RESULT, 0 );
	StoreValueToLocalWork(s_jump, 0);

	SetColorOfMessage( TRUE, 0xff, 0xff, 0xff );

	TitleScreen();

	CallSection("ChapterPreview");

	JumpSection("Title");
}

void ChapterPreview()
{
	PlayBGM( 2, "yoru", 128, 0 );

	DrawSceneWithMask( "black", "effect/mask2", 0, 0, 1000 );

	Wait(1000);

	DrawScene("title/chapterbg", 1000);

	DrawSpriteWithFiltering( 01, "title/chapteroverlay1", "effect/mask6", 0, 0, 0, TRUE, TRUE, 0, 0, 09, 1000, TRUE );

	//DrawSceneWithMask( "title/chapteroverlay1", "effect/mask6", 0, 0, 1000 );

	//DrawSceneWithMask( "scenario_c", "effect/mask5", 0, 0, 1000 );

	ShowChapterPreview();

	if(GetLocalFlag( LOCALWORK_NO_RESULT ) > 0)
	{
		StopBGM( 2 );
		PlaySE( 1, "wa_037", 128, 64 );

		DrawScene( "black", 1000 );
		CallSection("ResetScene");

		if(GetLocalFlag( LOCALWORK_NO_RESULT ) == 1)
			JumpSection("Saikoroshi");
		if(GetLocalFlag( LOCALWORK_NO_RESULT ) == 2)
			JumpSection("HiruChooseVersion");
		if(GetLocalFlag( LOCALWORK_NO_RESULT ) == 3)
			JumpSection("Batsukoishi");
	}

	FadeOutBGM( 2, 1000, FALSE );

	DrawScene("black", 1000);

	CallSection("Title");
}


void ViewTipsDisplay()
{
	//uses local flag TipsMode to determine what happens
	//0 - Leave, 1 - Show Extras Menu, 2 - Show Mid Chapter Screen, 3 - Show New Tips, 4 - Show All Tips (Local), 5 - Show All Tips (Global)

	SetValidityOfSaving( TRUE );

	DisableWindow();

	if(GetLocalFlag( TipsMode ) < 3)
		DrawScene("black", 0);

	if(GetLocalFlag( TipsMode ) == 1)
		ShowExtras();

	if(GetLocalFlag( LOCALWORK_NO_RESULT ) > 0)
		CallSection("ViewTipsDisplay");
}

void Saikoroshi()
{
	CallScript( "saikoroshi00" );
	CallScript( "saikoroshi01" );
	CallScript( "saikoroshi02" );
	CallScript( "saikoroshi02_2" );
	CallScript( "saikoroshi02_3" );
	CallScript( "saikoroshi03" );
	CallScript( "saikoroshi04" );

	SetGlobalFlag(GSaikoroshi, TRUE);

	JumpSection("ReturnToTitle");
}

void Hirukowashi()
{
	CallScript( "hirukowashi00" );
	CallScript( "hirukowashi01" );
	CallScript( "hirukowashi02" );
	CallScript( "hirukowashi02_2" );
	CallScript( "hirukowashi02_3" );
	CallScript( "hirukowashi03" );
	CallScript( "hirukowashi04" );

	SetGlobalFlag(GHirukowashi, TRUE);
	SetGlobalFlag(GOmakeUnlock, TRUE);

	JumpSection("ReturnToTitle");
}

void HiruChooseVersion()
{
	ModEnableNVLModeInADVMode();
	DrawScene("black", 1000 );

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "「昼壊し編」コンシューマー版は、同人PC版とは大きく異なります。ほとんど新しい話になっています。どっちの方をプレイしたいですか？",
			NULL, "The console version of Hirukowashi is significantly different from the original PC version. It's almost a whole new arc. Which version would you like to play?", Line_Normal);
	ClearMessage();

	DrawBustshotWithFiltering( 6, "2choices", "left", 0, 0, 0, FALSE, 0, 0, 0, 0, 0, 25, 250, TRUE );
	char HiruChoice0[2];

	if(GetGlobalFlag(GLanguage) == 1)
	{
		HiruChoice0[0] = "Original PC Version";
		HiruChoice0[1] = "Alternate Console Version";
	}
	else
	{
		HiruChoice0[0] = "同人PC版";
		HiruChoice0[1] = "異本コンシューマー版";
	}

	Select( 2, HiruChoice0 );

	DisableWindow();
	FadeBustshot( 6, FALSE, 0, 0, 0, 0, 200, TRUE );
	if (LoadValueFromLocalWork( SelectResult ) == 0)
	{
		ModDisableNVLModeInADVMode();
		DrawScene("black", 250 );
		JumpSection("Hirukowashi");
	}
	else
	{
		ModDisableNVLModeInADVMode();
		DrawScene("black", 250 );
		JumpSection("HiruConsole");
	}
}

void HiruConsole()
{
	CallScript( "hiruconsole_001" );
	CallScript( "hiruconsole_002" );
	CallScript( "hiruconsole_003" );
	CallScript( "hiruconsole_004" );
	CallScript( "hiruconsole_005" );
	CallScript( "hiruconsole_006" );
	CallScript( "hiruconsole_007" );
	CallScript( "hiruconsole_008" );
	CallScript( "hiruconsole_009" );
	CallScript( "hiruconsole_010" );
	CallScript( "hiruconsole_011" );

	DrawBustshotWithFiltering( 6, "2choices", "left", 0, 0, 0, FALSE, 0, 0, 0, 0, 0, 25, 250, TRUE );
	char HiruChoice1[2];

	if(GetGlobalFlag(GLanguage) == 1)
	{
		HiruChoice1[0] = "Swing right down the middle";
		HiruChoice1[1] = "Watch carefully, use discretion";
	}
	else
	{
		HiruChoice1[0] = "まっすぐ振り抜く";
		HiruChoice1[1] = "よく見て慎重に";
	}

	Select( 2, HiruChoice1 );
	DisableWindow();
	FadeBustshot( 6, FALSE, 0, 0, 0, 0, 200, TRUE );
	if (LoadValueFromLocalWork( SelectResult ) == 0)
	{
		JumpSection("HiruConsoleChoice1a");
	}
	else
	{
		JumpSection("HiruConsoleChoice1b");
	}

}

void HiruConsoleChoice1a()
{
	CallScript( "hiruconsole_011_choice1a" );

	JumpSection("HiruConsoleDay11Part2");
}

void HiruConsoleChoice1b()
{
	CallScript( "hiruconsole_011_choice1b" );

	JumpSection("HiruConsoleDay11Part2");
}

void HiruConsoleDay11Part2()
{
	CallScript( "hiruconsole_011_2" );

	DrawBustshotWithFiltering( 6, "2choices", "left", 0, 0, 0, FALSE, 0, 0, 0, 0, 0, 25, 250, TRUE );
	char HiruChoice2[2];

	if(GetGlobalFlag(GLanguage) == 1)
	{
		HiruChoice2[0] = "Swing with all my might";
		HiruChoice2[1] = "Be careful and hit it squarely";
	}
	else
	{
		HiruChoice2[0] = "力一杯振りぬく";
		HiruChoice2[1] = "ミートを心がける";
	}

	Select( 2, HiruChoice2 );
	DisableWindow();
	FadeBustshot( 6, FALSE, 0, 0, 0, 0, 200, TRUE );
	if (LoadValueFromLocalWork( SelectResult ) == 0)
	{
		JumpSection("HiruConsoleChoice2a");
	}
	else
	{
		JumpSection("HiruConsoleChoice2b");
	}
}

void HiruConsoleChoice2a()
{
	CallScript( "hiruconsole_011_choice2a" );

	JumpSection("HiruConsoleDay11Part3");
}

void HiruConsoleChoice2b()
{
	CallScript( "hiruconsole_011_choice2b" );

	JumpSection("HiruConsoleDay11Part3");
}

void HiruConsoleDay11Part3()
{
	CallScript( "hiruconsole_011_3" );

	DrawBustshotWithFiltering( 6, "2choices", "left", 0, 0, 0, FALSE, 0, 0, 0, 0, 0, 25, 250, TRUE );
	char HiruChoice3[2];

	if(GetGlobalFlag(GLanguage) == 1)
	{
		HiruChoice3[0] = "Aim for the same course!";
		HiruChoice3[1] = "Take a chance!";
	}
	else
	{
		HiruChoice3[0] = "同じコース狙いで！";
		HiruChoice3[1] = "ヤマを張って！";
	}

	Select( 2, HiruChoice3 );
	DisableWindow();
	FadeBustshot( 6, FALSE, 0, 0, 0, 0, 200, TRUE );
	if (LoadValueFromLocalWork( SelectResult ) == 0)
	{
		JumpSection("HiruConsoleChoice3a");
	}
	else
	{
		JumpSection("HiruConsoleChoice3b");
	}
}

void HiruConsoleChoice3a()
{
	CallScript( "hiruconsole_011_choice3a" );
	
	JumpSection("HiruConsoleBadEnd");
}

void HiruConsoleChoice3b()
{
	CallScript( "hiruconsole_011_choice3b" );

	DrawBustshotWithFiltering( 6, "2choices", "left", 0, 0, 0, FALSE, 0, 0, 0, 0, 0, 25, 250, TRUE );
	char HiruChoice4[2];

	if(GetGlobalFlag(GLanguage) == 1)
	{
		HiruChoice4[0] = "Leave it to Satoko";
		HiruChoice4[1] = "Handle it myself";
	}
	else
	{
		HiruChoice4[0] = "任せる";
		HiruChoice4[1] = "自分で打つ";
	}

	Select( 2, HiruChoice4 );
	DisableWindow();
	FadeBustshot( 6, FALSE, 0, 0, 0, 0, 200, TRUE );
	if (LoadValueFromLocalWork( SelectResult ) == 0)
	{
		JumpSection("HiruConsoleGoodEnd");
	}
	else
	{
		JumpSection("HiruConsoleBadEnd");
	}
}

void HiruConsoleGoodEnd()
{
	CallScript( "hiruconsole_011_4" );
	CallScript( "hiruconsole_012" );
	CallScript( "hiruconsole_013" );

	JumpScript( "flow" );

}

void HiruConsoleBadEnd()
{
	CallScript( "hiruconsole_011_tobadend" );
	CallScript( "hiruconsole_badend" );

	JumpScript( "flow" );
}


void Batsukoishi()
{
	CallScript( "batsukoishi01" );

	SetGlobalFlag(GBatsukoishi, TRUE);

	JumpSection("ReturnToTitle");
}

void ResetScene()
{
	FadeOutBGM( 0, 1000, FALSE );
	FadeOutBGM( 1, 1000, FALSE );
	FadeOutBGM( 2, 1000, FALSE );
	FadeOutBGM( 3, 1000, TRUE );

	StoreValueToLocalWork(NewTipsStart , 0);
	StoreValueToLocalWork(NewTipsCount , 0);
	StoreValueToLocalWork(TipsCount , 0);

	SetValidityOfSaving( TRUE );
	SetValidityOfInput( TRUE );

	SetColorOfMessage( TRUE, 0xff, 0xff, 0xff );

	DrawScene( "black", 0 );
}

void ReturnToTitle()
{
	CallSection("ResetScene");

	if(GetGlobalFlag( GSaikoroshi ) + GetGlobalFlag( GHirukowashi ) + GetGlobalFlag( GBatsukoishi ) == 3)
	{
		SetGlobalFlag( GFlag_GameClear, TRUE );
	}

	StoreValueToLocalWork(NewTipsStart , 0);
	StoreValueToLocalWork(NewTipsCount , 0);
	StoreValueToLocalWork(TipsCount , 0);

	FadeOutBGM( 0, 1000, TRUE );
	FadeOutBGM( 1, 1000, TRUE );
	FadeOutBGM( 2, 1000, TRUE );
	FadeOutBGM( 3, 1000, TRUE );

	JumpSection("Title");
}
